{"serviceName":"auth-service","type":"service","endpoints":[{"subject":"auth-service.decode-token","createQueueGroup":true,"mustBeLoggedIn":false,"permissions":null,"forwardToHttp":null,"requestSchema":"DecodeTokenRequest","responseSchema":null,"validateRequest":true,"docs":{"description":"Decodes a jwt token.","errors":{"auth-service.403.1":"Invalid JWT token"}},"parsedSubject":{"subject":"auth-service.decode-token","isHTTP":false},"natsSubscribeOptions":{"queue":"auth-service.decode-token"},"instanceId":"n/a.59ede06d","serviceName":"na.59ede06d","schemas":[{"id":"AuthRequest","properties":{"username":{"type":"string","description":"User's username, could for example be an email"},"password":{"type":"string","description":"User's password","faker":"internet.password"}},"required":["username","password"],"sample":{"username":"in ex irure ut Ut","password":"voluptate irure"}},{"id":"DecodeTokenRequest","description":"The token to decode.","type":"string","sample":"magna null"},{"id":"GenerateJWTTokenForUserRequest","description":"Mongodb query to get a user to generate token for.","type":"object","sample":{}},{"id":"RefreshTokenRequest","properties":{"refreshToken":{"description":"the refresh token to refresh access token with","type":"string"}},"sample":{"refreshToken":"cillum nulla et"}},{"id":"TokenAuthResponse","properties":{"accessToken":{"type":"string"},"refreshToken":{"type":"string"}},"sample":{"accessToken":"dolore reprehenderit tempor","refreshToken":"commodo ad eiusmod"}}]},{"subject":"auth-service.generate-jwt-token-for-user.app","createQueueGroup":true,"mustBeLoggedIn":false,"permissions":null,"forwardToHttp":null,"requestSchema":null,"responseSchema":null,"validateRequest":true,"docs":{"description":null,"query":{},"params":{},"errors":{}},"deprecated":"Use auth-service.generate-jwt-token-for-user.token instead","parsedSubject":{"subject":"auth-service.generate-jwt-token-for-user.app","isHTTP":false},"natsSubscribeOptions":{"queue":"auth-service.generate-jwt-token-for-user.app"},"instanceId":"n/a.59ede06d","serviceName":"na.59ede06d","schemas":[{"id":"AuthRequest","properties":{"username":{"type":"string","description":"User's username, could for example be an email"},"password":{"type":"string","description":"User's password","faker":"internet.password"}},"required":["username","password"],"sample":{"username":"in ex irure ut Ut","password":"voluptate irure"}},{"id":"DecodeTokenRequest","description":"The token to decode.","type":"string","sample":"magna null"},{"id":"GenerateJWTTokenForUserRequest","description":"Mongodb query to get a user to generate token for.","type":"object","sample":{}},{"id":"RefreshTokenRequest","properties":{"refreshToken":{"description":"the refresh token to refresh access token with","type":"string"}},"sample":{"refreshToken":"cillum nulla et"}},{"id":"TokenAuthResponse","properties":{"accessToken":{"type":"string"},"refreshToken":{"type":"string"}},"sample":{"accessToken":"dolore reprehenderit tempor","refreshToken":"commodo ad eiusmod"}}]},{"subject":"auth-service.generate-jwt-token-for-user.cookie","createQueueGroup":true,"mustBeLoggedIn":false,"permissions":null,"forwardToHttp":null,"requestSchema":"GenerateJWTTokenForUserRequest","responseSchema":null,"validateRequest":true,"docs":{"description":"Generates a web JWT token for a user matching the inputted Mongo query. Used for external logins.","errors":{"auth-service.404.2":"User not found"}},"parsedSubject":{"subject":"auth-service.generate-jwt-token-for-user.cookie","isHTTP":false},"natsSubscribeOptions":{"queue":"auth-service.generate-jwt-token-for-user.cookie"},"instanceId":"n/a.59ede06d","serviceName":"na.59ede06d","schemas":[{"id":"AuthRequest","properties":{"username":{"type":"string","description":"User's username, could for example be an email"},"password":{"type":"string","description":"User's password","faker":"internet.password"}},"required":["username","password"],"sample":{"username":"in ex irure ut Ut","password":"voluptate irure"}},{"id":"DecodeTokenRequest","description":"The token to decode.","type":"string","sample":"magna null"},{"id":"GenerateJWTTokenForUserRequest","description":"Mongodb query to get a user to generate token for.","type":"object","sample":{}},{"id":"RefreshTokenRequest","properties":{"refreshToken":{"description":"the refresh token to refresh access token with","type":"string"}},"sample":{"refreshToken":"cillum nulla et"}},{"id":"TokenAuthResponse","properties":{"accessToken":{"type":"string"},"refreshToken":{"type":"string"}},"sample":{"accessToken":"dolore reprehenderit tempor","refreshToken":"commodo ad eiusmod"}}]},{"subject":"auth-service.generate-jwt-token-for-user.token","createQueueGroup":true,"mustBeLoggedIn":false,"permissions":null,"forwardToHttp":null,"requestSchema":"GenerateJWTTokenForUserRequest","responseSchema":"TokenAuthResponse","validateRequest":true,"docs":{"description":"Generates a web JWT token for a user matching the inputted Mongo query. Used for external logins.","errors":{"auth-service.404.2":"User not found"}},"parsedSubject":{"subject":"auth-service.generate-jwt-token-for-user.token","isHTTP":false},"natsSubscribeOptions":{"queue":"auth-service.generate-jwt-token-for-user.token"},"instanceId":"n/a.59ede06d","serviceName":"na.59ede06d","schemas":[{"id":"AuthRequest","properties":{"username":{"type":"string","description":"User's username, could for example be an email"},"password":{"type":"string","description":"User's password","faker":"internet.password"}},"required":["username","password"],"sample":{"username":"in ex irure ut Ut","password":"voluptate irure"}},{"id":"DecodeTokenRequest","description":"The token to decode.","type":"string","sample":"magna null"},{"id":"GenerateJWTTokenForUserRequest","description":"Mongodb query to get a user to generate token for.","type":"object","sample":{}},{"id":"RefreshTokenRequest","properties":{"refreshToken":{"description":"the refresh token to refresh access token with","type":"string"}},"sample":{"refreshToken":"cillum nulla et"}},{"id":"TokenAuthResponse","properties":{"accessToken":{"type":"string"},"refreshToken":{"type":"string"}},"sample":{"accessToken":"dolore reprehenderit tempor","refreshToken":"commodo ad eiusmod"}}]},{"subject":"auth-service.generate-jwt-token-for-user.web","createQueueGroup":true,"mustBeLoggedIn":false,"permissions":null,"forwardToHttp":null,"requestSchema":null,"responseSchema":null,"validateRequest":true,"docs":{"description":null,"query":{},"params":{},"errors":{}},"deprecated":"Use auth-service.generate-jwt-token-for-user.cookie instead","parsedSubject":{"subject":"auth-service.generate-jwt-token-for-user.web","isHTTP":false},"natsSubscribeOptions":{"queue":"auth-service.generate-jwt-token-for-user.web"},"instanceId":"n/a.59ede06d","serviceName":"na.59ede06d","schemas":[{"id":"AuthRequest","properties":{"username":{"type":"string","description":"User's username, could for example be an email"},"password":{"type":"string","description":"User's password","faker":"internet.password"}},"required":["username","password"],"sample":{"username":"in ex irure ut Ut","password":"voluptate irure"}},{"id":"DecodeTokenRequest","description":"The token to decode.","type":"string","sample":"magna null"},{"id":"GenerateJWTTokenForUserRequest","description":"Mongodb query to get a user to generate token for.","type":"object","sample":{}},{"id":"RefreshTokenRequest","properties":{"refreshToken":{"description":"the refresh token to refresh access token with","type":"string"}},"sample":{"refreshToken":"cillum nulla et"}},{"id":"TokenAuthResponse","properties":{"accessToken":{"type":"string"},"refreshToken":{"type":"string"}},"sample":{"accessToken":"dolore reprehenderit tempor","refreshToken":"commodo ad eiusmod"}}]}]}